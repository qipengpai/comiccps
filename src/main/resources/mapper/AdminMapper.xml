<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qpp.comiccps.basics.dao.AdminMapper">
    <resultMap id="BaseResultMap" type="com.qpp.comiccps.basics.entity.Admin">
        <id column="uid" jdbcType="VARCHAR" property="uid"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="is_system" jdbcType="VARCHAR" property="isSystem"/>
        <result column="created_at" jdbcType="VARCHAR" property="createdAt"/>
        <result column="updated_at" jdbcType="VARCHAR" property="updatedAt"/>
    </resultMap>

    <resultMap id="CustomResultMap" type="com.qpp.comiccps.basics.entity.Admin">
        <id column="uid" jdbcType="VARCHAR" property="uid"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="is_system" jdbcType="VARCHAR" property="isSystem"/>
        <result column="created_at" jdbcType="VARCHAR" property="createdAt"/>
        <result column="updated_at" jdbcType="VARCHAR" property="updatedAt"/>
        <collection property="roleList" ofType="com.qpp.comiccps.basics.entity.CpsRole">
            <id column="role_id" jdbcType="VARCHAR" property="roleId" />
            <result column="role_name" jdbcType="VARCHAR" property="roleName" />
            <result column="role_desc" jdbcType="VARCHAR" property="roleDesc" />
            <result column="enable" jdbcType="INTEGER" property="enable" />
            <result column="created_at" jdbcType="VARCHAR" property="createdAt" />
            <result column="updated_at" jdbcType="VARCHAR" property="updatedAt" />
            <collection property="menuList"  ofType="com.qpp.comiccps.basics.entity.Menu">
                <id column="menu_id" jdbcType="VARCHAR" property="menuId" />
                <result column="menu_name" jdbcType="VARCHAR" property="menuName" />
                <result column="menu_type" jdbcType="VARCHAR" property="menuType" />
                <result column="menu_url" jdbcType="VARCHAR" property="menuUrl" />
                <result column="menu_code" jdbcType="VARCHAR" property="menuCode" />
                <result column="parent_id" jdbcType="VARCHAR" property="parentId" />
                <result column="parent_ids" jdbcType="VARCHAR" property="parentIds" />
                <result column="child_num" jdbcType="INTEGER" property="childNum" />
                <result column="listorder" jdbcType="INTEGER" property="listorder" />
                <result column="created_at" jdbcType="VARCHAR" property="createdAt" />
                <result column="updated_at" jdbcType="VARCHAR" property="updatedAt" />
            </collection>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
    uid, username, password, state, salt, is_system, created_at, updated_at
    </sql>
    <sql id="Custom_Column_List">
        uid, username, state, is_system,created_at,updated_at
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from admin
        where uid = #{uid,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from admin
    where uid = #{uid,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.qpp.comiccps.basics.entity.Admin">
    insert into admin (uid, username, password, 
      state, salt, is_system, 
      created_at, updated_at)
    values (#{uid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{salt,jdbcType=VARCHAR}, #{isSystem,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=VARCHAR}, #{updatedAt,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.qpp.comiccps.basics.entity.Admin">
        <selectKey keyProperty="uid" resultType="String" order="BEFORE">
            select replace(uuid(),'-','') from dual
        </selectKey>
        insert into admin
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                uid,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="isSystem != null">
                is_system,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="isSystem != null">
                #{isSystem,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=VARCHAR},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.qpp.comiccps.basics.entity.Admin">
        update admin
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="isSystem != null">
                is_system = #{isSystem,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=VARCHAR},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=VARCHAR},
            </if>
        </set>
        where uid = #{uid,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.qpp.comiccps.basics.entity.Admin">
        update admin
        set username = #{username,jdbcType=VARCHAR},
          password = #{password,jdbcType=VARCHAR},
          state = #{state,jdbcType=INTEGER},
          salt = #{salt,jdbcType=VARCHAR},
          is_system = #{isSystem,jdbcType=VARCHAR},
          created_at = #{createdAt,jdbcType=VARCHAR},
          updated_at = #{updatedAt,jdbcType=VARCHAR}
        where uid = #{uid,jdbcType=VARCHAR}
    </update>

    <!--cps用户登录-->
    <select id="cpsAdminLogin" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM Admin WHERE state = 1 AND username=#{username,jdbcType=VARCHAR}
        AND password = #{password,jdbcType=VARCHAR}
    </select>

    <!--为生成token-->
    <select id="getCpsAdmin" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM Admin WHERE state = 1 AND username=#{username,jdbcType=VARCHAR}
    </select>

    <!--创建Cps用户-->
    <insert id="createCpsAdmin">
        <selectKey keyProperty="uid" resultType="String" order="BEFORE">
            select replace(uuid(),'-','') from dual
        </selectKey>
        insert into admin
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                uid,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="password != null">
                salt,
            </if>
            <if test="username != null">
                is_system,
            </if>
            <if test="date != null">
                created_at,
            </if>
            <if test="date != null">
                updated_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{isSystem,jdbcType=VARCHAR},
            </if>
            <if test="date != null">
                #{createdAt,jdbcType=VARCHAR},
            </if>
            <if test="date != null">
                #{updatedAt,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <!--查询所有CPS用户-->
    <select id="getAllCpsAdmin" resultMap="BaseResultMap">
        SELECT
        <include refid="Custom_Column_List"/>
        FROM Admin
    </select>

    <!--解除绑定前验证密码-->
    <select id="getAdminByCheckUser" resultMap="BaseResultMap">
        SELECT
        <include refid="Custom_Column_List"/>
        FROM Admin
        WHERE uid=#{userType,jdbcType=VARCHAR}
        AND password = #{password,jdbcType=VARCHAR}
    </select>

    <!--获取角色权限-->
    <select id="getCpsAdminRoleMenu" resultMap="CustomResultMap">
      SELECT a.*,c.*,m.* FROM admin AS a,admin_role AS ar,cps_role AS c,menu AS m,role_menu AS rm
      WHERE a.uid=ar.admin_id AND ar.role_id = c.role_id AND c.role_id = rm.role_id AND m.menu_id = rm.menu_id
      AND a.username=#{username}
    </select>

    <!--根据用户名获取用户Id-->
    <select id="getAdminByUserName" resultMap="BaseResultMap">
        SELECT
        <include refid="Custom_Column_List"/>
        FROM  Admin WHERE username = #{authorization}
    </select>
</mapper>