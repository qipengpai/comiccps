<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qpp.comiccps.basics.dao.MemberMapper">
  <resultMap id="BaseResultMap" type="com.qpp.comiccps.basics.entity.Member">
    <id column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="created_at" jdbcType="VARCHAR" property="createdAt" />
    <result column="updated_at" jdbcType="VARCHAR" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    uid, account, password, salt, state, created_at, updated_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member
    where uid = #{uid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from member
    where uid = #{uid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.qpp.comiccps.basics.entity.Member">
    insert into member (uid, account, password, 
      salt, state, created_at, 
      updated_at)
    values (#{uid,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{createdAt,jdbcType=VARCHAR}, 
      #{updatedAt,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qpp.comiccps.basics.entity.Member">
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        uid,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qpp.comiccps.basics.entity.Member">
    update member
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qpp.comiccps.basics.entity.Member">
    update member
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=VARCHAR},
      updated_at = #{updatedAt,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=VARCHAR}
  </update>

</mapper>